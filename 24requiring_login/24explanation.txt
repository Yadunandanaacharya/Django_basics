Create a template for user to add new article.

How to protect pages that requires login.

No I can do these things: Signup, Login, Logout.

How  to protect certain pages that require login.

1) I need to create a new url inside article->urls.py
I need to create urls above slug, if I add url after slug
url(r'^)
it's like go to '/articles/create'
Then url will look at 'articles' first of all and try to create or 
make login from existing article page. 
But I don't want to make it, I'll create url before slug. Now it reaches
my create url and fires create url

2) 2nd parameter for url I need view function to get fired
url(r'^create/$',views.article_create, name='create')

3)Next open views.py inside articles app.
and create
def  article_request(request):
    return render(request,'articles/article_create.html')
when we go to /articles/create/    "article_request" function will be fired and
returns article_create.html template

4) Inside articles/template/articles create article_create.html template.

5) article_create.html will look like form
User can add his own title, slug, image.
first extends from base_layout.html

6)Now when you type /article/create then article_request fucntion will be fired.
You'll see "Article Home List
Logout
Create an Awesome new article" these things in web page.

7) When you press on Logout you'll visit main article list page 
again when you type /articles/create it'll again go to create page.
Eventhough I'm loggedout from article_list page I can visit article/create page.

8) Now I want to protect this login page, only users loggedin view it.
If they are not loggedin they need to redirect login page.

We can do this by using decorators
Decorators basically extends the function, it adds the additional functionality to it.
9)
@login_required()
this will protect our view.
When view function will be fired, it'll say you need to be  logged in work here
or add article.

10) login_required is inbuilt decorator here:
from django.contrib.auth.decorators import login_required

11) Passing url for that:
@login_required(login_url="/accounts/login")
So it redirects to that if not logged in.

12) Testing : Go to articles page refresh it press logout.
Next go to /articles/create since you are not logged in page will
directly go to login page not to article page.

13) But we have one problem here when I go to /articles/create then when
we will press on login it will redirect to article listing page.
But I like to redirect to create page

This above 13th step is not simple